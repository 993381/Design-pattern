<h1 id="_label0">1 Chain Of Responsibility</h1><pre class="ql-syntax" spellcheck="false"><span class="hljs-meta">#include &lt;iostream&gt;</span>
<span class="hljs-meta">#include &lt;string&gt;</span>
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;
<span class="hljs-comment">// 类似于try catch，向上抛出异常的机制</span>
<span class="hljs-comment">// https://www.cnblogs.com/JesonYang/p/6124124.html</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Manager</span>
{</span>
<span class="hljs-keyword">protected</span>:
&nbsp; &nbsp; Manager *m_manager;
&nbsp; &nbsp; <span class="hljs-built_in">string</span> m_name;
<span class="hljs-keyword">public</span>:
&nbsp; &nbsp; Manager(Manager* manager,<span class="hljs-built_in">string</span> name):m_manager(manager),m_name(name){}
&nbsp; &nbsp; <span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DealWithRequest</span><span class="hljs-params">(<span class="hljs-built_in">string</span> name, <span class="hljs-keyword">int</span> num)</span> </span>{}
};

<span class="hljs-comment">//经理</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommonManager</span> :</span> <span class="hljs-keyword">public</span> Manager
{
<span class="hljs-keyword">public</span>:
&nbsp; &nbsp; CommonManager(Manager* manager,<span class="hljs-built_in">string</span> name):Manager(manager,name){}
&nbsp; &nbsp; <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">DealWithRequest</span><span class="hljs-params">(<span class="hljs-built_in">string</span> name,<span class="hljs-keyword">int</span> num)</span>
&nbsp; &nbsp; </span>{
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-keyword">if</span>(num &lt; <span class="hljs-number">500</span>)
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"经理"</span> &lt;&lt;m_name &lt;&lt; <span class="hljs-string">"批准"</span> &lt;&lt; name &lt;&lt; <span class="hljs-string">"加薪"</span> &lt;&lt; num &lt;&lt; <span class="hljs-string">"元"</span> &lt;&lt;<span class="hljs-built_in">endl</span>;
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-keyword">else</span>
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"经理"</span> &lt;&lt; m_name &lt;&lt; <span class="hljs-string">"无法处理,交由总监处理"</span> &lt;&lt;<span class="hljs-built_in">endl</span>;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_manager-&gt;DealWithRequest(name,num);
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }
};

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Majordomo</span>:</span><span class="hljs-keyword">public</span> Manager
{
<span class="hljs-keyword">public</span>:
&nbsp; &nbsp; Majordomo(Manager *manager,<span class="hljs-built_in">string</span> name):Manager(manager,name){}
&nbsp; &nbsp; <span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DealWithRequest</span><span class="hljs-params">(<span class="hljs-built_in">string</span> name,<span class="hljs-keyword">int</span> num)</span>
&nbsp; &nbsp; </span>{
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-keyword">if</span>(num &lt; <span class="hljs-number">1000</span>)
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"总监"</span> &lt;&lt;m_name &lt;&lt; <span class="hljs-string">"批准"</span> &lt;&lt; name &lt;&lt; <span class="hljs-string">"加薪"</span> &lt;&lt; num &lt;&lt; <span class="hljs-string">"元"</span> &lt;&lt;<span class="hljs-built_in">endl</span>;
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-keyword">else</span>
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"总监"</span> &lt;&lt; m_name &lt;&lt; <span class="hljs-string">"无法处理,交由总经理处理"</span> &lt;&lt;<span class="hljs-built_in">endl</span>;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_manager-&gt;DealWithRequest(name,num);
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }
};

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GeneralManager</span> :</span> <span class="hljs-keyword">public</span> Manager
{
<span class="hljs-keyword">public</span>:
&nbsp; &nbsp; GeneralManager(Manager *manager,<span class="hljs-built_in">string</span> name):Manager(manager,name){}
&nbsp; &nbsp; <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">DealWithRequest</span><span class="hljs-params">(<span class="hljs-built_in">string</span> name,<span class="hljs-keyword">int</span> num)</span>
&nbsp; &nbsp; </span>{
&nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"总经理"</span> &lt;&lt;m_name &lt;&lt; <span class="hljs-string">"批准"</span> &lt;&lt; name &lt;&lt; <span class="hljs-string">"加薪"</span> &lt;&lt; num &lt;&lt; <span class="hljs-string">"元"</span> &lt;&lt;<span class="hljs-built_in">endl</span>;
&nbsp; &nbsp; }
};



<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span>
</span>{
&nbsp; &nbsp; Manager *general = <span class="hljs-keyword">new</span> GeneralManager(<span class="hljs-literal">NULL</span>,<span class="hljs-string">"a"</span>);
&nbsp; &nbsp; Manager *majordomo = <span class="hljs-keyword">new</span> Majordomo(general,<span class="hljs-string">"b"</span>);
&nbsp; &nbsp; Manager *common = <span class="hljs-keyword">new</span> CommonManager(majordomo,<span class="hljs-string">"c"</span>);
&nbsp; &nbsp; common-&gt;DealWithRequest(<span class="hljs-string">"d"</span>,<span class="hljs-number">400</span>);
&nbsp; &nbsp; common-&gt;DealWithRequest(<span class="hljs-string">"d"</span>,<span class="hljs-number">700</span>);
&nbsp; &nbsp; common-&gt;DealWithRequest(<span class="hljs-string">"d"</span>,<span class="hljs-number">1200</span>);
&nbsp; &nbsp; system(<span class="hljs-string">"pause"</span>);
&nbsp; &nbsp; <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
}
</pre>